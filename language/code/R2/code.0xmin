#set 0xmin.settings.language("tptasm");
#set 0xmin.settings.log_table=1;
//void #set 0xmin.settings.log_table=1;
let heap{import lib "heap.0xmin";};
...let heap;
let fillMem(len,num,stop){
	push %1;push %2;
	%0=len;
	repeat stop hault;
	call malloc;//malloc.call(0);repeat +stop hault;
	%1=#(num>>16&0x1fff);//high
	%2=#(num&0xffff);//low
	memset.call(0,1,2);
	pop %2;pop %1;//pop %0;
	push %0;
};
def let test1{
	fillMem(8, 0x1ffffff);
	fillMem(12,0x1f0000f);
	fillMem(5, 0x1ffffff);
	mask=0;
	pop %0;
	pop %0;
	free.call(0);
	pop %0;
	free.call(0);
	fillMem(25,0x00000ff);
	//fillMem(6,0x00000ff);
	fillMem(0,0x00ff0000);
	//fillMem(15,0x00ff000);
	//fillMem(8,0x00000ff);
};
def let test2{
	fillMem(5,0x0000fff);
};
def let a{jump->a};
hault;
def free;
def clear;
def memset;
def heap;
/*
%10=%0;
%1=0x1234;
%2=0x5678;
heap.memset.call(0,1,2);
%0=%10;
heap.clear.call(0);
hault;*/