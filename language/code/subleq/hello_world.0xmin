#"code";#"int";
void ...labelsof{
	let compile(){
		:global;
		void:{#;
			let compiled=global..compile;
			global..splice(0,global..length);
			let i=0;
			repeat compiled..length void{#;
				repeat (+compiled[i]==0) void{#;
					compiled..splice(i,1,0x20000000);
				};
				i+=1;
			};
			global{...codeof compiled;};
		};
	};
};
let jump(line){@;zero;minus1;line};
let set0(mem){@;
	@mem;@mem;0;
};
#let print(str){@;
	:this;
	#let data{
		void #let i=-1;
		repeat str..length #def:{@;
			(-(0x20020000|str[i+=1]));
		};
	};
	#let i=-1;
	repeat str..length {@;
		data[i+=1];-1;0;
	};
	$jump(this..return);
	#def data;
};
let minus1{-1};
let zero{0};
print("hello world");
{:hault;zero;minus1;-1};
#def zero;
#def minus1;
#...run compile;
//input;output;hault