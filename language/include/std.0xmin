if(!io){
	#import lib "io.0xmin";
};
let int(number){
	def number;
	let self=this;
	set block{
		def self;
	}
}::{
	def let block{};
};
def main;
let function(inLen)={
	//#assert block;
	var inputs{};
	var outputs{};
	#let b=block;
	set this.block{...b();};
	this.block=b=>this.block;
	this=>()=>{{
		let i;
		let inputs=this.block.inputs;
		repeat(inputs..length){
			if(arguments[i]){
				if(arguments[i]!=alu){
					move->arguments[i];get;
				}move->inputs[i];set;
			}else{
				break->0;
				i--;
			}
			i++;
		}
		move->block.return;get;
		if(i==inputs..length&&arguments[i]){
			if(arguments[i]!=alu){
				move->arguments[i];set;
			}
		}
		//...this.block.call;
	}}
}
function(){
	1;2;
};
def a.block;