#"log.code";
#"!log.table";
#"make file";
#(){
	let object{
		var array{11;22;object};
		var property=4;
		var method(b){
			...code;
			return;
		}
		var class()={
			constructor;
			this;
			move->continue;
			move->return;
		}::{
			var staticProperty;
			var set prototype{
				var instanceProperty;
			}
		}
		var subObject{//subObject
			var property2;
		}
	}
}
{
	import lib "std.0xmin";
	def io;
	def main;
	#let str=...String.move(2,2)...String.col(15,0)..."Hello World";
	//#set str{String.move(2,2);String.col(15,0);}
	printString(pos,str)={
		var n->pos;//debugger n;
		var n1->n;
		var next(){
			//debugger str[n1];
			//debugger.log str[n1]"getCode(label).map(v=>v.croppedSource)";
			move->5;
			get;
			move->terminal.output;
			set;
			jump+3;
			def str[n1];
			0x3fffffff
			#n+1;
			#set n1->n+(+n1)+1;
		}
	}
	#let a;
	#let itter=printString(str=str,pos=a);
	def itter.next();
	def itter.next();
	def itter.next();
	def itter.next();
	def itter.next();
	def itter.next();
	def itter.next();
	def itter.next();
	hault();
	0x3ffff000;
	#def a;
}
#(){//test
	#let String;
	#var std{
		#let red_filt  {0x20000000;};//'red_filt;'
		#set String{
			#var print(string){//nonLocal string;
				debugger.typeof red_filt;
				red_filt() def let const_0;
			}
		}
	}
	//void{...std;}
	def String.print(string);
	//debugger std;
}